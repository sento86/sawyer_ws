@ROSMSGBOOSTHEADERS@
#include <rtt/types/TransportPlugin.hpp>
#include <rtt/types/TypekitPlugin.hpp>
#include <rtt/transports/mqueue/MQTemplateProtocol.hpp>
#include <rtt/transports/mqueue/MQSerializationProtocol.hpp>

namespace RTT {
    namespace mqueue {
      struct MQROS@ROSPACKAGE@Plugin : public types::TransportPlugin
      {
        bool registerTransport(std::string name, types::TypeInfo* ti)
        {
            @MQMSGTRANSPORTS@ { }
            return false;
        }
        
        std::string getTransportName() const {
            return "mqueue";
        }
        
        std::string getTypekitName() const {
            return std::string("ros-")+"@ROSPACKAGE@";
        }
        std::string getName() const {
            return std::string("rtt-ros-") + "@ROSPACKAGE@" + "-transport-mqueue";
        }

      };
    }
}

ORO_TYPEKIT_PLUGIN( RTT::mqueue::MQROS@ROSPACKAGE@Plugin )
